{"version":3,"sources":["images/undraw_male_avatar_323b.png","Components/TableView.js","Components/ProfilePhoto.js","Components/ProfileInfo.js","Components/ProfileView.js","Data/mock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","TableView","icons","columns","title","field","data","this","onRowClick","event","rowData","onSelected","React","Component","ProfilePhoto","customer","Card","Img","src","picture","defaultPhoto","Body","Title","firstname","Text","phone","email","ProfileInfo","state","lastname","gender","region","password","prevProps","prevState","snapshot","setState","value","target","Header","Form","Group","as","Row","Label","column","sm","Col","Control","type","placeholder","onChange","text","handleChange","ProfileView","customerData","App","Navbar","bg","variant","Brand","href","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7069b8dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_male_avatar_323b.989a66aa.png\";","import React from 'react'\n\nimport MaterialTable from 'material-table'\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nclass TableView extends React.Component {\n  render(){\n    return (\n      <MaterialTable\n        icons={tableIcons}\n        columns={[\n          { title: 'First Name', field: 'firstname' },\n          { title: 'Last Name', field: 'lastname' },\n          { title: 'Gender', field: 'gender' },\n          { title: 'Region', field: 'region' },\n          { title: 'Phone', field: 'phone' },\n        ]}\n        data={this.props.data}\n        title=\"Customers Data\"\n        onRowClick={(event, rowData)=>{this.props.onSelected(rowData)}}\n       />\n    )\n  }\n}\n\nexport default TableView\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nimport defaultPhoto from '../images/undraw_male_avatar_323b.png'\n\nclass ProfilePhoto extends React.Component{\n  render(){\n    const customer = this.props.customer || {}\n    return (\n      <Card>\n        <Card.Img\n          src={customer.picture || defaultPhoto} />\n        <Card.Body>\n          <Card.Title>\n            {customer.firstname? customer.firstname + ' ' + customer.firstname\n            : 'Full Name'}\n          </Card.Title>\n          <Card.Text>\n            {customer.phone || 'Phone'}\n          </Card.Text>\n          <Card.Text>\n            {customer.email || 'Email'}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default ProfilePhoto\n","import React from 'react'\nimport { Card, Form, Row, Col } from 'react-bootstrap'\n\nclass ProfileInfo extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      firstname: '',\n      lastname: '',\n      gender: '',\n      region: '',\n      phone: '',\n      email: '',\n      password: ''\n    }\n  }\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if (this.props.customer !== prevProps.customer) {\n      this.setState({...this.props.customer})\n    }\n  }\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n  render(){\n    return (\n      <Card>\n        <Card.Header>Customer Details</Card.Header>\n        <Card.Body>\n          <Form>\n            <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                First Name\n              </Form.Label>\n              <Col sm={9}>\n                <Form.Control type=\"text\" placeholder=\"First Name\"\n                  value={this.state.firstname}\n                  onChange={(text)=>{this.handleChange(text)}}/>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Last Name\n              </Form.Label>\n              <Col sm={9}>\n                <Form.Control type=\"text\" placeholder=\"Last Name\"\n                  value={this.state.lastname}\n                  onChange={(text)=>{this.handleChange(text)}}/>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Gender\n              </Form.Label>\n              <Col sm={9}>\n                <Form.Control type=\"text\" placeholder=\"Male/Female\"\n                  value={this.state.gender}\n                  onChange={(text)=>{this.handleChange(text)}}/>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Region\n              </Form.Label>\n              <Col sm={9}>\n                <Form.Control type=\"text\" placeholder=\"Region\"\n                 value={this.state.region}\n                 onChange={(text)=>{this.handleChange(text)}}/>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Phone\n              </Form.Label>\n              <Col sm={9}>\n                <Form.Control type=\"phone\" placeholder=\"XXX-XXX-XXXX\"\n                  value={this.state.phone}\n                  onChange={(text)=>{this.handleChange(text)}}/>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Password\n              </Form.Label>\n              <Col sm={9}>\n                <Form.Control type=\"password\" placeholder=\"Password\"\n                  value ={this.state.password}\n                  onChange={(text)=>{this.handleChange(text)}}/>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default ProfileInfo\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\n\nimport ProfilePhoto from './ProfilePhoto'\nimport ProfileInfo from './ProfileInfo'\n\nclass ProfileView extends React.Component {\n  render(){\n    return (\n      <Row>\n        <Col sm={4}>\n          <ProfilePhoto customer={this.props.data} />\n        </Col>\n        <Col sm={8}>\n          <ProfileInfo customer={this.props.data} />\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default ProfileView\n","export const customerData = [\n  {\n    firstname: 'Mario',\n    lastname: 'Speedwagon',\n    gender: 'male',\n    region: 'US',\n    phone: '617-716-1617',\n    email: 'mario.speedwagon@mock.up',\n    password: 'donotread'\n  },\n  {\n    firstname: 'Anna',\n    lastname: 'Mull',\n    gender: 'female',\n    region: 'US',\n    phone: '827-777-2828',\n    email: 'anna.mull@mock.up',\n    password: 'donotread'\n  }\n]\n","import React from 'react';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Navbar } from 'react-bootstrap'\n\nimport TableView from './Components/TableView'\nimport ProfileView from './Components/ProfileView'\n\nimport { customerData } from './Data/mock.js'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  render(){\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">\n            Customer Finder\n          </Navbar.Brand>\n        </Navbar>\n        <Container>\n          <ProfileView data={this.state.customer} />\n          <TableView\n            data={customerData}\n            onSelected={(customer)=>{this.setState({customer})}} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}